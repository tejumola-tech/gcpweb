

name: GCP Infra + Ansible Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_DIR: ${{ github.workspace }}/GCP
      ANSIBLE_DIR: ${{ github.workspace }}/Ansible

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # configure credentials
      - name: Configure GCP Credentials
        run: |
          mkdir -p "${{ github.workspace }}/GCP"
          echo '${{ secrets.GCP_CREDENTIALS }}' > "${{ github.workspace }}/GCP/gcp-key.json"

      # 4️⃣ Terraform Init
      - name: Terraform Init
        working-directory: ./GCP
        run: terraform init

      # 5️⃣ Terraform Apply
      - name: Terraform Apply
        working-directory: ./GCP
        run: |
          terraform apply -auto-approve \
              -var="project_id=${{ secrets.GCP_PROJECT }}" \
              -var="region=${{ secrets.GCP_REGION }}" 
              

      # 6️⃣ Get Terraform output (VM IP)
      - name: Get VM IP
        id: tf_output
        working-directory: ./GCP
        run: |
          ip=$(terraform output -raw instance_ip)
          echo "VM_IP=$ip" >> $GITHUB_ENV

      # 7️⃣ Configure SSH (write secret to file and setup known hosts)
      - name: Setup SSH
        shell: bash
        run: |
          mkdir -p $HOME/.ssh
          cat <<EOF > $HOME/.ssh/id_rsa
${{ secrets.SSH_PRIVATE_KEY }}
EOF
    chmod 600 $HOME/.ssh/id_rsa

    # Debug info
    ls -l $HOME/.ssh/id_rsa
    wc -l $HOME/.ssh/id_rsa || true

    # Retry loop for ssh-keyscan until the VM is reachable
    MAX_RETRIES=10
    COUNT=0
    until ssh-keyscan -H ${{ env.VM_IP }} >> $HOME/.ssh/known_hosts 2>/dev/null; do
      COUNT=$((COUNT+1))
      if [ $COUNT -ge $MAX_RETRIES ]; then
        echo "VM not reachable via SSH after $MAX_RETRIES attempts"
        exit 1
      fi
      echo "Waiting for VM to be reachable via SSH... retry $COUNT/$MAX_RETRIES"
      sleep 10
    done

      # 8️⃣ Install Ansible
      - name: Install Ansible
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y ansible

      # 9️⃣ Run Ansible playbook
      - name: Run Ansible Playbook
        shell: bash
        run: |
          echo "[gcp_vm]" > inventory.ini
          echo "${{ env.VM_IP }} ansible_user=opate ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini
          ansible-playbook -i inventory.ini $ANSIBLE_DIR/deploy_apache.yml
